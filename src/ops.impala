
extern
fn calc_wsum_generic(out : &mut[f64], sub : &GridSubset, conn : &GridConnectivity,
                      vals : &[f64], wghts : &[f64], level_count : u32) -> () {
  generic_call(out, sub, conn, vals, wghts, level_count, conn.trg_count as i32)
}
extern
fn calc_wsum_triangle(out : &mut[f64], sub : &GridSubset, conn : &GridConnectivity,
                      vals : &[f64], wghts : &[f64], level_count : u32) -> () {
  generic_call(out, sub, conn, vals, wghts, level_count, 3)
}


fn @generic_call(out : &mut[f64], sub : &GridSubset, conn : &GridConnectivity,
                 vals : &[f64], wghts : &[f64], level_count : u32, trg_count : i32) -> () {
  let (io_info, output_size) = handle_io(out, sub, conn, vals, wghts, level_count);

  with benchmark_kernel() {
    for iter in io_info.subset.iterate(level_count, trg_count) {
      let mut result = 0.0 as f64;

      for value, weight in fetch_data(io_info, iter) {
        result += value * weight;
      }
      io_info.output.write(iter.out_idx(), result);
    }
  }

  output_to_host(output_size, io_info.output, out);
}
